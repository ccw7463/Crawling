# ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 이론 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
- 웹스크래핑 : 웹페이지에서 원하는 부분만 가져옴
- 웹크롤링 : 웹페이지 내에 있는 링크를 따라가서 모두 가져오는 것

웹 : HTML + CSS + JS 로 구성됨
집으로 예를 들면

1. 전체적인 구조인 뼈대(HTML)를 만듦 = HTML
   - 거실/부억/침실 구분은 되어있음
2. 인테리어를 해서 집안의 분위기를 바꿈 = CSS
   - 색상부터 재질까지 원하는 가구로 채움 
3. 이제 집에서 사람들이 거주하면서 살아감 = JS
   - 샤워하고 밥먹고 등등

실습전 설치사항
1. extension >> open in browser 설치  
    - vs code 안에 있는 html 문서를 open 하도록 도와줌

# ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ HTML 이론 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
HTML 기본 구조
- 기본적으로 아래 각각을 하나의 element라고 부름
1. <여는태그> 내용 </닫는태그>
2. <여는태그 속성1=값 속성2=값>
3. <여는태그/>
4. <여는태그 속성1=값/>

HTML 태그 종류
메인1. <head></head> : 홈페이지의 제목 또는 HTML 문서를 위한 선행작업 하는 부분
메인2. <body></body> : 실제로 웹페이지의 본문 내용을 정의하는 부분

HTML 태그 추가 종류
1. <title>창우홈페이지입니다.</title> : 제목 지정
2. <h1>안녕하세요</h1> : 글씨 굵게
3. <input type="text" value="ID입력"> : 데이터를 입력받을 수 있는 부분
4. <meta charset='utf-8'> : 한글 입력가능 설정 (유니코드)
5. <a herf="http://google.com">구글로 이동</a> : 링크 설정

# ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ xpath ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

누가 나도고등학교 교무실로 전화를 하여 이지은학생을 찾는다. 
만약 아래~~ 학생중 이지은 학생을 부른다면 어떻게해야할까?

'방법 1. 나도고등학교>>1학년>>1반>>5번 이지은 학생 교무실로오세요'
--> 아래예제 : /학교/학년/반/학생[5]
--> 실제경우 : /html/body/div/div/div/div/span/a...
'방법 2. 1-1-5 학번 학생 교무실로 오세요' --> 간단한 방법
--> 아래예제 : //*[@학번="1-1-5"] 또는 //학생[@학번="1-1-5"]
--> 실제경우 : //*[@id="1-1-5"] 또는 //student[@id="1-1-5"]
--> 추가설명
    - 슬래쉬 한번(/) : 디렉토리 한개 아래
    - 슬래쉬 두번(//) : 디렉토리 전체
    - 별모양(*) : 모든 element 에서
    - @ : 속성을 지목하기위함 --> (@속성)
    


<학교 이름 = "나도고등학교">
    <학년 value="1학년">
        <반 value="1반">
            <학생 value="1번" 학번="1-1-1">이지은</학생>
            <학생 value="2번" 학번="1-1-2">유재석</학생>
            <학생 value="3번" 학번="1-1-3">조세호</학생>
            <학생 value="4번" 학번="1-1-4">박명수</학생>
            <학생 value="5번" 학번="1-1-5">이지은</학생> "---> 해당학생"
        </반>
        <반 value="2반"/>
        <반 value="3반"/>
        <반 value="4반"/>
    </학년>
    <학년 value="2학년">
    </학년>
    <학년 value="3학년">
    </학년>
</학교>

# ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ HTTP ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

우리가 HTTP 프로토콜을 통해서 서버에 요청을 보내면 서버는 그 요청에 맞게 응답을 해줌

응답에 포함되는것 중 하나가 HTTP METHOD 가 있음
- 1. GET : 내용을 누구나 볼 수 있게 url에 적어 보내는 방식 
    - https://www.coupang.com/np/search?minPrice=10000&maxPrice=10000&page=1
    - ? 뒤에 붙은것들이 "변수=값" 이다. 
    - 장점) 해당값들을 변경하면서 쉽게 페이지를 요청할 수 있음
    - 단점) 한번 전송할때 데이터양의 제한이 있음.
            보안이 필요한 경우에는 사용 불가능
                예) https://www.coupang.com/np/search?id=ccw7463&pw=1234

- 2. POST : url이 아닌 http 메시지 body에 숨겨서 보내는 방식
    - 장점) 데이터의 양이 제한이없어서 크기가 큰 파일 업로드도 가능
                예) 홈페이지에 게시물을 올린다던지, 글을 쓸경우 POST 사용
                    --> 이름 그대로 POSTING 할때 쓴다고 기억!
            GET보다는 보안상 안전하다. (물론 크게 안전하지는않음)

# ㅡㅡㅡ ★중요한 내용★ ㅡㅡㅡ
전체 과정
▶ HTML 문서 정보가져오기 --> 스크래핑하기 ◀

◆ HTML 문서 정보 가져오기◆

방법 1. request 
    - 웹페이지(HTML) 읽어오기
    - 빠르다 
    - 동적 웹페이지에서 사용X
        --> 주어진 url을 통해 받아온 HTML 에 원하는 정보가 있을때 사용
        --> res.raise_for_status() : 문제없는지 확인
    ★중요★ : soup = BeautifulSoup(res.text,"lxml")    

방법 2. Selenium
    - 웹 페이지(HTML) 읽어오기 + 자동화
    - 느리고 메모리 많이먹음
    - 동적 웹페이지에서 사용O
        --> 로그인, 어떤 결과에 대한 필터링 등 어떤 동작을 해야하는 경우 사용
        --> 크롬 버전에 맞는 chromedriver.exe 가 반드시 있어야함
    ★중요★ : soup = BeautifulSoup(browser.page_source"lxml")
    
◆ 스크래핑 하기 ◆

방법 : BeautifulSoup
    - 원하는 데이터 추출 ( 웹스크래핑 수행 )